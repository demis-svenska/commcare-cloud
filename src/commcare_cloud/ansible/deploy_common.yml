- name: Common
  hosts: all
  become: true
  roles:
    - common
  tags: common

- name: ufw (firewall)
  hosts: '!proxy:!cas_proxy:!pna_proxy:!couchdb2_proxy'
  become: true
  roles:
    - {role: ufw, tags: ufw, when: ufw_private_interface is defined}
  tags: common

- name: ufw (proxy firewall)
  hosts: 'proxy:cas_proxy:pna_proxy:couchdb2_proxy'
  become: true
  tasks:
    - import_tasks: roles/ufw/tasks/proxy_ufw.yml tags=ufw-proxy
      when: ufw_private_interface is defined or is_monolith|bool
  tags: common

- name: ufw off (firewall)
  hosts: all
  become: true
  tasks:
    - ufw: state=disabled
      when: ufw_private_interface is not defined and not is_monolith|bool
      tags: ufw
  tags: common

- name: Datadog agent
  hosts: all
  become: true
  roles:
    - {role: datadog, tags: datadog, when: DATADOG_ENABLED}
  tags: common

- name: Configure swap
  hosts: all
  roles:
    - {role: swap}
  tags: common

- name: Configure monit
  hosts: all
  roles:
    - {role: monit, tags: monit}
  tags: common

- name: Configure static routes
  hosts: all
  tasks:

  - name: Checks existing static routes
    shell: 'ip route show {{ item.prefix }} | wc -l'
    with_items: "{{ static_routes }}"
    become: True
    register: static_routes_status
    changed_when: false
    when: static_routes|default(false)
    tags:
      - static-routes
      - after-reboot

  - name: Adds static routes
    shell: "route {{ item.item.cmd }} -net {{ item.item.prefix }} gw {{ item.item.gateway }}"
    become: true
    with_items: "{{ static_routes_status.results }}"
    when: static_routes|default(false) and ((item.stdout == "0" and item.item.cmd == "add") or (item.stdout == "1" and item.item.cmd == "del"))
    tags:
      - static-routes
      - after-reboot
  tags: common

- name: DNS configuration
  hosts: all
  tasks:

  - name: set running configuration
    become: yes
    lineinfile:
      dest: /etc/resolv.conf
      line: 'nameserver {{ item }}'
    with_items: "{{ nameservers }}"
    when: nameservers is defined
    tags:
      - dns
      - after-reboot

  - name: set resolvconf base configuration
    become: yes
    lineinfile:
      dest: /etc/resolvconf/resolv.conf.d/base
      line: 'nameserver {{ item }}'
    with_items: "{{ nameservers }}"
    when: nameservers is defined
    tags:
      - dns
      - after-reboot
  tags: common
